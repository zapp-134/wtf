# k8s-manifests.yaml

# 1. Persistent Volume for Postgres Data
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: db-pvc
spec:
  accessModes:
    - ReadWriteOnce
  resources:
    requests:
      storage: 1Gi
---
# 2. Postgres Database Deployment
apiVersion: apps/v1
kind: Deployment
metadata:
  name: db
spec:
  replicas: 1
  selector:
    matchLabels:
      app: db
  template:
    metadata:
      labels:
        app: db
    spec:
      containers:
      - name: postgres
        image: postgres:14
        ports:
        - containerPort: 5432
        env:
        - name: POSTGRES_USER
          value: "postgres"
        - name: POSTGRES_PASSWORD
          value: "postgres"
        - name: POSTGRES_DB
          value: "postgres"
        volumeMounts:
        - name: pgdata
          mountPath: /var/lib/postgresql/data
      volumes:
      - name: pgdata
        persistentVolumeClaim:
          claimName: db-pvc
---
# 3. Postgres Database Service
apiVersion: v1
kind: Service
metadata:
  name: db # The DNS name will be "db"
spec:
  selector:
    app: db
  ports:
  - protocol: TCP
    port: 5432       # Service's port
    targetPort: 5432  # Container's port
---
# 4. API Deployment
apiVersion: apps/v1
kind: Deployment
metadata:
  name: api
spec:
  replicas: 1
  selector:
    matchLabels:
      app: api
  template:
    metadata:
      labels:
        app: api
    spec:
      containers:
      - name: api
        image: brain-tumor-app:latest # Our custom-built image
        imagePullPolicy: IfNotPresent # Tells K8s to use the local image
        ports:
        - containerPort: 8000
        env:
        - name: DATABASE_URL
          value: "postgresql://postgres:postgres@db:5432/postgres"
        - name: MODEL_DIR
          value: "/app/ml/artifacts/current"
        - name: WEAK_FEEDBACK_DIR
          value: "/app/data/weak_feedback"
        volumeMounts:
        - name: artifacts
          mountPath: /app/ml/artifacts
        - name: feedback
          mountPath: /app/data/weak_feedback
      volumes:
      - name: artifacts
        hostPath:
          path: /mnt/artifacts # Path on the kind node
      - name: feedback
        hostPath:
          path: /mnt/feedback # Path on the kind node
---
# 5. API Service (NodePort)
apiVersion: v1
kind: Service
metadata:
  name: api-service
spec:
  type: NodePort # Exposes the service on the node
  selector:
    app: api # Selects the 'api' deployment's pods
  ports:
  - protocol: TCP
    port: 8000       # Service's internal port
    targetPort: 8000   # Container's port
    nodePort: 30080  # MUST match the 'containerPort' in kind-config.yaml
---
# 6. Trainer Deployment
apiVersion: apps/v1
kind: Deployment
metadata:
  name: trainer
spec:
  replicas: 1
  selector:
    matchLabels:
      app: trainer
  template:
    metadata:
      labels:
        app: trainer
    spec:
      containers:
      - name: trainer
        image: brain-tumor-app:latest # Use the same image
        imagePullPolicy: IfNotPresent
        command: ["/bin/bash", "-lc", "./scripts/retrain_loop.sh"]
        workingDir: /app
        env:
        - name: DATABASE_URL
          value: "postgresql://postgres:postgres@db:5432/postgres"
        - name: MODEL_DIR
          value: "/app/ml/artifacts/current"
        - name: WEAK_FEEDBACK_DIR
          value: "/app/data/weak_feedback"
        - name: THRESHOLD
          value: "5"
        - name: INTERVAL
          value: "300"
        volumeMounts:
        - name: artifacts
          mountPath: /app/ml/artifacts
        - name: feedback
          mountPath: /app/data/weak_feedback
      volumes:
      - name: artifacts
        hostPath:
          path: /mnt/artifacts
      - name: feedback
        hostPath:
          path: /mnt/feedback